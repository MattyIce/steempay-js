let steempay=function(){let config={api_url:"https://steempay.io",pub_key:"STM6LoQ2tr436jpLAefP8YyAyDkZCc8XB15DCeA5DA5eYND8kVvXc",chain_id:"ssc-mainnet1"},tokens={},payment_functions={steemconnect:async function(payment,from_address){if(!(payment&&payment.payment_currency&&tokens[payment.payment_currency]&&["steem","steem-engine"].includes(tokens[payment.payment_currency].type)))return{error:"Invalid payment information or unsupported payment currency."};let token_type=tokens[payment.payment_currency].type,url=null;"steem"==token_type?url=`https://v2.steemconnect.com/sign/transfer?to=${payment.account}&amount=${parseFloat(payment.payment_amount).toFixed(3)}%20${payment.payment_currency}&memo=${payment.id}`:"steem_engine"==token_type&&(url="https://steemconnect.com/sign/custom-json?authority=active",url+="&required_posting_auths="+encodeURI("[]"),url+="&required_auths="+encodeURI('["'+from_address+'"]'),url+="&id="+config.chain_id,url+="&json="+encodeURI(JSON.stringify(get_se_transfer_data(payment))));!function(url,title,w,h){var dualScreenLeft=void 0!=window.screenLeft?window.screenLeft:screen.left,dualScreenTop=void 0!=window.screenTop?window.screenTop:screen.top,width=window.innerWidth?window.innerWidth:document.documentElement.clientWidth?document.documentElement.clientWidth:screen.width,height=window.innerHeight?window.innerHeight:document.documentElement.clientHeight?document.documentElement.clientHeight:screen.height,left=width/2-w/2+dualScreenLeft,top=height/2-h/2+dualScreenTop,newWindow=window.open(url,title,"scrollbars=yes, width="+w+", height="+h+", top="+top+", left="+left);window.focus&&newWindow.focus()}(url,"SteemConnect Payment",600,800)},active_key:submit_payment_active_key,steem_keychain:async function(payment,from_address){if(!(payment&&payment.payment_currency&&tokens[payment.payment_currency]&&["steem","steem-engine"].includes(tokens[payment.payment_currency].type)))return{error:"Invalid payment information or unsupported payment currency."};let token_type=tokens[payment.payment_currency].type;if("steem"==token_type)return new Promise(resolve=>{steem_keychain.requestTransfer(from_address,payment.account,parseFloat(payment.payment_amount).toFixed(3),payment.id,payment.payment_currency,r=>{resolve({success:r.success,trx_id:r.success?r.result.id:null,error:r.success?null:"string"==typeof r.error?r.error:JSON.stringify(r.error)})})});"steem_engine"==token_type&&new Promise(resolve=>steem_keychain.requestCustomJson(from_address,config.chain_id,"Active",get_se_transfer_data(payment),"Transfer Tokens",r=>{resolve({success:r.success,trx_id:r.success?r.result.id:null,error:r.success?null:"string"==typeof r.error?r.error:JSON.stringify(r.error)})}))},vessel:submit_payment_vessel};function api(url,data){return new Promise((resolve,reject)=>{null!=data&&void 0!=data||(data={}),data.v=(new Date).getTime(),_player&&(data.token=_player.token,data.username=_player.name);var xhr=new XMLHttpRequest;xhr.open("GET",config.api_url+url+"?"+function(object){var encodedString="";for(var prop in object)object.hasOwnProperty(prop)&&(encodedString.length>0&&(encodedString+="&"),encodedString+=encodeURI(prop+"="+object[prop]));return encodedString}(data)),xhr.onload=function(){200===xhr.status?resolve(function(json){try{return JSON.parse(json)}catch(err){return console.log("Error trying to parse JSON: "+json),null}}(xhr.responseText)):reject("Request failed.  Returned status of "+xhr.status)},xhr.send()})}function get_se_transfer_data(payment){return{contractName:"tokens",contractAction:"transfer",contractPayload:{symbol:payment.payment_currency,to:payment.account,quantity:parseFloat(payment.payment_amount)+"",memo:payment.id}}}return{api:api,init:async function(options){config=Object.assign(config,options),tokens=await api("/supported_tokens")},start_purchase:async function(account,amount,price_currency,payment_currency,data){return new Promise(async(resolve,reject)=>{try{let result=await api("/start_payment",{account:account,amount:amount,price_currency:price_currency,payment_currency:payment_currency,data:data});result||reject(),result.success?resolve(result.payment):reject(result.error)}catch(err){reject(err)}})},lookup_purchase:async function(id){return await api("/find_payment",{id:id})},payment_methods:function(token_symbol){let token=tokens[token_symbol];if(!token)return[];if(["steem","steem_engine"].includes(token.type)){let methods=["steemconnect","active_key"];return window.steem_keychain&&methods.unshift("steem_keychain"),"ontouchstart"in window||methods.push("vessel"),methods}return"tron"==token.type?["tronweb"]:void 0},submit_payment:async function(payment_method,payment,from_address,key){let payment_function=payment_functions[payment_method];return payment_function?await payment_function(payment,from_address,key):{error:"Unsupported payment method specified."}}}}();